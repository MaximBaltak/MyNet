{"ast":null,"code":"import axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport NewNewsAPI from \"./NewNewsAPI\";\n\nlet mapStateToProps = state => {\n  return {\n    titleChange: state.newsPage.newsChangeTitle,\n    textChange: state.newsPage.newsChange,\n    file: state.newsPage.file\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    titleNewChange: data => {\n      dispatch({\n        type: 'CHANGE-TITLE-NEWS',\n        title: data\n      });\n    },\n    textNewChange: data => {\n      dispatch({\n        type: 'CHANGE-TEXT-NEWS',\n        text: data\n      });\n    },\n    click: (file, title, text) => {\n      if (file !== '' && text !== '' && title !== '') {\n        let data = new Date();\n        let d = data.getDate();\n        let m = data.getMonth();\n        let y = data.getFullYear();\n\n        switch (m) {\n          case 0:\n            m = 'января';\n            break;\n\n          case 1:\n            m = 'февраля';\n            break;\n\n          case 2:\n            m = 'марта';\n            break;\n\n          case 3:\n            m = 'апреля';\n            break;\n\n          case 4:\n            m = 'мая';\n            break;\n\n          case 5:\n            m = 'июня';\n            break;\n\n          case 6:\n            m = 'июля';\n            break;\n\n          case 7:\n            m = 'августа';\n            break;\n\n          case 8:\n            m = 'сентября';\n            break;\n\n          case 9:\n            m = 'октября';\n            break;\n\n          case 10:\n            m = 'ноября';\n            break;\n\n          case 11:\n            m = 'декабря';\n            break;\n\n          default:\n            m = \"неизвестно\";\n        }\n\n        ;\n        let date = `${d} ${m} ${y}`;\n        let fromData = new FormData();\n        fromData.append('date', date);\n        fromData.append('file', file);\n        fromData.append('title', title);\n        fromData.append('text', text);\n        axios({\n          method: 'POST',\n          url: '/news',\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          data: fromData\n        }).then(response => {\n          if (response.status === 200) {\n            console.log('Запрос завершон');\n          }\n        }).catch(err => {\n          console.log('что то пошло не так ошибка:' + err);\n        });\n      } else {\n        alert('Все поля должны быть заполнены');\n      }\n    }\n  };\n};\n\nlet NewNewsContainer = connect(mapStateToProps, mapDispatchToProps)(NewNewsAPI);\nexport default NewNewsContainer;","map":{"version":3,"sources":["D:/react-project/project1/client/src/components/news/NewNews/NewNewsContainer.js"],"names":["axios","connect","NewNewsAPI","mapStateToProps","state","titleChange","newsPage","newsChangeTitle","textChange","newsChange","file","mapDispatchToProps","dispatch","titleNewChange","data","type","title","textNewChange","text","click","Date","d","getDate","m","getMonth","y","getFullYear","date","fromData","FormData","append","method","url","headers","then","response","status","console","log","catch","err","alert","NewNewsContainer"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport NewNewsAPI from \"./NewNewsAPI\";\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n        titleChange: state.newsPage.newsChangeTitle,\r\n        textChange: state.newsPage.newsChange,\r\n        file: state.newsPage.file,\r\n    }\r\n}\r\nlet mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n            titleNewChange:(data)=>{\r\n                dispatch({\r\n                    type:'CHANGE-TITLE-NEWS',\r\n                    title: data,\r\n                })\r\n            },\r\n            textNewChange:(data)=>{\r\n                dispatch({\r\n                    type:'CHANGE-TEXT-NEWS',\r\n                    text: data,\r\n                })\r\n            },\r\n            \r\n            click:(file,title,text)=>{\r\n                if(file!==''&&text!==''&& title!==''){\r\n                    let data=new Date();\r\n                    let d=data.getDate()\r\n                    let m=data.getMonth();\r\n                    let y=data.getFullYear();\r\n        \r\n                    switch(m){\r\n                        case 0: m='января' \r\n                        break;\r\n                        case 1: m='февраля'\r\n                        break\r\n                        case 2: m='марта'\r\n                        break;\r\n                        case 3: m='апреля'\r\n                        break;\r\n                        case 4: m='мая'\r\n                        break;\r\n                        case 5: m='июня'\r\n                        break;\r\n                        case 6: m='июля'\r\n                        break;\r\n                        case 7: m='августа'\r\n                        break;\r\n                        case 8: m='сентября'\r\n                        break;\r\n                        case 9: m='октября'\r\n                        break;\r\n                        case 10: m='ноября'\r\n                        break;\r\n                        case 11: m='декабря'\r\n                        break;\r\n                        default:\r\n                            m=\"неизвестно\"\r\n        \r\n                    };\r\n                        let date=`${d} ${m} ${y}`;\r\n                \r\n                    let fromData= new FormData();\r\n                    fromData.append('date',date)\r\n                    fromData.append('file',file)\r\n                    fromData.append('title',title)\r\n                    fromData.append('text',text)\r\n                    axios({\r\n                        method: 'POST',\r\n                        url: '/news',\r\n                        headers:{\r\n                            'Content-Type': 'multipart/form-data'\r\n                        },\r\n                        data: fromData,\r\n                        \r\n                    \r\n                    })\r\n                    .then(response=>{\r\n                        if(response.status===200){\r\n                            console.log('Запрос завершон')\r\n                        }\r\n                    })\r\n                    .catch(err=>{console.log('что то пошло не так ошибка:'+ err)})\r\n                }else{\r\n                    alert('Все поля должны быть заполнены')\r\n                }        \r\n            }\r\n}       }\r\nlet NewNewsContainer=connect(mapStateToProps,mapDispatchToProps)(NewNewsAPI)\r\nexport default NewNewsContainer"]},"metadata":{},"sourceType":"module"}