{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-project\\\\project1\\\\client\\\\src\\\\components\\\\news\\\\NewsAPi.js\";\nimport React, { Component } from 'react';\nimport News from './News';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class NewsAPi extends Component {\n  componentDidMount() {\n    if (this.props.valueApi === false) {\n      axios.get('/news', {\n        responseType: 'json'\n      }).then(response => response.data).then(data => {\n        data.forEach(el => {\n          let date = el.date;\n          let img = el.img;\n          let title = el.title;\n          let text = el.text;\n          let id = el._id;\n          console.log(id);\n          this.props.all(id, date, img, title, text);\n        });\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.valueWindow === true) {\n      return false;\n    } else {\n      axios.get('/news', {\n        responseType: 'json'\n      }).then(response => response.data).then(data => {\n        data.forEach(el => {\n          let date = el.date;\n          let img = el.img;\n          let title = el.title;\n          let text = el.text;\n          let id = el._id;\n          console.log(id);\n          this.props.all(id, date, img, title, text);\n        });\n      });\n      return true;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(News, {\n      allNews: this.props.allNews,\n      value: this.props.value,\n      open: this.props.open,\n      close: this.props.close\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/react-project/project1/client/src/components/news/NewsAPi.js"],"names":["React","Component","News","axios","NewsAPi","componentDidMount","props","valueApi","get","responseType","then","response","data","forEach","el","date","img","title","text","id","_id","console","log","all","shouldComponentUpdate","nextProps","nextState","valueWindow","render","allNews","value","open","close"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAE3CI,EAAAA,iBAAiB,GAAE;AAEf,QAAG,KAAKC,KAAL,CAAWC,QAAX,KAAsB,KAAzB,EAA+B;AAC3BJ,MAAAA,KAAK,CAACK,GAAN,CAAU,OAAV,EAAkB;AAACC,QAAAA,YAAY,EAAE;AAAf,OAAlB,EAECC,IAFD,CAEMC,QAAQ,IAAEA,QAAQ,CAACC,IAFzB,EAGCF,IAHD,CAGME,IAAI,IAAE;AACPA,QAAAA,IAAI,CAACC,OAAL,CAAaC,EAAE,IAAE;AACd,cAAIC,IAAI,GAACD,EAAE,CAACC,IAAZ;AACA,cAAIC,GAAG,GAACF,EAAE,CAACE,GAAX;AACA,cAAIC,KAAK,GAACH,EAAE,CAACG,KAAb;AACA,cAAIC,IAAI,GAACJ,EAAE,CAACI,IAAZ;AACA,cAAIC,EAAE,GAAEL,EAAE,CAACM,GAAX;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AAEA,eAAKb,KAAL,CAAWiB,GAAX,CAAeJ,EAAf,EAAkBJ,IAAlB,EAAuBC,GAAvB,EAA2BC,KAA3B,EAAiCC,IAAjC;AAEH,SAVA;AAYH,OAhBF;AAkBH;AAEJ;;AACDM,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACtC,QAAG,KAAKpB,KAAL,CAAWqB,WAAX,KAAyB,IAA5B,EAAiC;AAC9B,aAAO,KAAP;AACF,KAFD,MAEM;AACHxB,MAAAA,KAAK,CAACK,GAAN,CAAU,OAAV,EAAkB;AAACC,QAAAA,YAAY,EAAE;AAAf,OAAlB,EAECC,IAFD,CAEMC,QAAQ,IAAEA,QAAQ,CAACC,IAFzB,EAGCF,IAHD,CAGME,IAAI,IAAE;AACPA,QAAAA,IAAI,CAACC,OAAL,CAAaC,EAAE,IAAE;AACd,cAAIC,IAAI,GAACD,EAAE,CAACC,IAAZ;AACA,cAAIC,GAAG,GAACF,EAAE,CAACE,GAAX;AACA,cAAIC,KAAK,GAACH,EAAE,CAACG,KAAb;AACA,cAAIC,IAAI,GAACJ,EAAE,CAACI,IAAZ;AACA,cAAIC,EAAE,GAAEL,EAAE,CAACM,GAAX;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AAEA,eAAKb,KAAL,CAAWiB,GAAX,CAAeJ,EAAf,EAAkBJ,IAAlB,EAAuBC,GAAvB,EAA2BC,KAA3B,EAAiCC,IAAjC;AAEH,SAVA;AAYH,OAhBF;AAiBC,aAAO,IAAP;AACH;AACH;;AAIHU,EAAAA,MAAM,GAAG;AACL,wBAAO,QAAC,IAAD;AAAM,MAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWuB,OAA1B;AAAmC,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWwB,KAArD;AAA4D,MAAA,IAAI,EAAE,KAAKxB,KAAL,CAAWyB,IAA7E;AAAmF,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAW0B;AAArG;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAvD0C","sourcesContent":["import React, { Component } from 'react'\r\nimport News from './News'\r\nimport axios from 'axios'\r\n\r\nexport default class NewsAPi extends Component {\r\n    \r\n    componentDidMount(){\r\n\r\n        if(this.props.valueApi===false){\r\n            axios.get('/news',{responseType: 'json' })\r\n            \r\n            .then(response=>response.data)\r\n            .then(data=>{\r\n                 data.forEach(el=>{\r\n                    let date=el.date;\r\n                    let img=el.img;\r\n                    let title=el.title;\r\n                    let text=el.text;\r\n                    let id =el._id;\r\n                    console.log(id)\r\n                    \r\n                    this.props.all(id,date,img,title,text);\r\n                \r\n                }\r\n                \r\n            )})\r\n            \r\n        }\r\n       \r\n    }\r\n    shouldComponentUpdate(nextProps, nextState){\r\n         if(this.props.valueWindow===true){\r\n            return false\r\n         }else {\r\n            axios.get('/news',{responseType: 'json' })\r\n            \r\n            .then(response=>response.data)\r\n            .then(data=>{\r\n                 data.forEach(el=>{\r\n                    let date=el.date;\r\n                    let img=el.img;\r\n                    let title=el.title;\r\n                    let text=el.text;\r\n                    let id =el._id;\r\n                    console.log(id)\r\n                    \r\n                    this.props.all(id,date,img,title,text);\r\n                \r\n                }\r\n                \r\n            )})\r\n             return true\r\n         }\r\n      }\r\n            \r\n    \r\n    \r\n    render() {\r\n        return <News allNews={this.props.allNews} value={this.props.value} open={this.props.open} close={this.props.close}/>\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}