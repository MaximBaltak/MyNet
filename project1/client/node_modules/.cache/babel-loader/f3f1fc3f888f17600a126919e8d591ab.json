{"ast":null,"code":"import news from './../img/new.jpg';\nlet inishialSate = {\n  allNews: [],\n  newNews: {},\n  newsChange: '',\n  newsChangeTitle: '',\n  filterNews: [],\n  newsfilter: '',\n  valueaAPI: false,\n  file: ''\n};\n\nconst NewsReducer = (state = inishialSate, action) => {\n  let stateCopy = { ...state,\n    allNews: [...state.allNews],\n    newNews: { ...state.newNews\n    }\n  };\n\n  switch (action.type) {\n    case 'ADD-NEWS':\n      stateCopy.newNews = {};\n      let date = new Date(),\n          year = date.getFullYear(),\n          moth = date.getMonth(),\n          data = date.getDate();\n      stateCopy.newNews.date = `${data} ${moth} ${year}`;\n      stateCopy.newNews.img = news;\n      stateCopy.newNews.title = stateCopy.newsChangeTitle;\n      stateCopy.newNews.text = stateCopy.newsChange;\n      stateCopy.allNews.unshift(stateCopy.newNews);\n      return stateCopy;\n\n    case 'CHANGE-TITLE-NEWS':\n      stateCopy.newsChangeTitle = action.title;\n      return stateCopy;\n\n    case 'CHANGE-TEXT-NEWS':\n      stateCopy.newsChange = action.text;\n      return stateCopy;\n\n    case 'CHANGE-FILE':\n      stateCopy.file = action.file;\n      return stateCopy;\n\n    case \"ALL-NEWS-DB\":\n      stateCopy.valueaAPI = true;\n      stateCopy.allNews.forEach(el => {\n        if (stateCopy.allNews.indexOf(el) !== el) {\n          stateCopy.allNews.unshift({\n            id: action.id,\n            date: action.date,\n            img: action.img,\n            title: action.title,\n            text: action.text\n          });\n        }\n      });\n      return stateCopy;\n\n    default:\n      return state;\n  }\n};\n\n_c = NewsReducer;\nexport default NewsReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsReducer\");","map":{"version":3,"sources":["D:/react-project/project1/client/src/redux/NewsReducer.js"],"names":["news","inishialSate","allNews","newNews","newsChange","newsChangeTitle","filterNews","newsfilter","valueaAPI","file","NewsReducer","state","action","stateCopy","type","date","Date","year","getFullYear","moth","getMonth","data","getDate","img","title","text","unshift","forEach","el","indexOf","id"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,kBAAjB;AAEA,IAAIC,YAAY,GAAC;AACbC,EAAAA,OAAO,EAAC,EADK;AAEbC,EAAAA,OAAO,EAAC,EAFK;AAGbC,EAAAA,UAAU,EAAC,EAHE;AAIbC,EAAAA,eAAe,EAAC,EAJH;AAKbC,EAAAA,UAAU,EAAC,EALE;AAMbC,EAAAA,UAAU,EAAC,EANE;AAObC,EAAAA,SAAS,EAAE,KAPE;AAQbC,EAAAA,IAAI,EAAC;AARQ,CAAjB;;AAWA,MAAMC,WAAW,GAAE,CAACC,KAAK,GAACV,YAAP,EAAoBW,MAApB,KAA6B;AAC5C,MAAIC,SAAS,GAAC,EACV,GAAGF,KADO;AAEVT,IAAAA,OAAO,EAAC,CAAC,GAAGS,KAAK,CAACT,OAAV,CAFE;AAGVC,IAAAA,OAAO,EAAC,EAAC,GAAGQ,KAAK,CAACR;AAAV;AAHE,GAAd;;AAKA,UAAOS,MAAM,CAACE,IAAd;AACI,SAAK,UAAL;AAEAD,MAAAA,SAAS,CAACV,OAAV,GAAkB,EAAlB;AACA,UAAIY,IAAI,GAAC,IAAIC,IAAJ,EAAT;AAAA,UACIC,IAAI,GAACF,IAAI,CAACG,WAAL,EADT;AAAA,UAEIC,IAAI,GAACJ,IAAI,CAACK,QAAL,EAFT;AAAA,UAGIC,IAAI,GAACN,IAAI,CAACO,OAAL,EAHT;AAKAT,MAAAA,SAAS,CAACV,OAAV,CAAkBY,IAAlB,GAAwB,GAAEM,IAAK,IAAGF,IAAK,IAAGF,IAAK,EAA/C;AACAJ,MAAAA,SAAS,CAACV,OAAV,CAAkBoB,GAAlB,GAAsBvB,IAAtB;AACAa,MAAAA,SAAS,CAACV,OAAV,CAAkBqB,KAAlB,GAAwBX,SAAS,CAACR,eAAlC;AACAQ,MAAAA,SAAS,CAACV,OAAV,CAAkBsB,IAAlB,GAAuBZ,SAAS,CAACT,UAAjC;AAEAS,MAAAA,SAAS,CAACX,OAAV,CAAkBwB,OAAlB,CAA0Bb,SAAS,CAACV,OAApC;AAGH,aAAOU,SAAP;;AACA,SAAK,mBAAL;AACGA,MAAAA,SAAS,CAACR,eAAV,GAA0BO,MAAM,CAACY,KAAjC;AACH,aAAOX,SAAP;;AACA,SAAK,kBAAL;AACGA,MAAAA,SAAS,CAACT,UAAV,GAAqBQ,MAAM,CAACa,IAA5B;AACH,aAAOZ,SAAP;;AACA,SAAK,aAAL;AACGA,MAAAA,SAAS,CAACJ,IAAV,GAAeG,MAAM,CAACH,IAAtB;AACH,aAAOI,SAAP;;AACA,SAAK,aAAL;AACGA,MAAAA,SAAS,CAACL,SAAV,GAAoB,IAApB;AACAK,MAAAA,SAAS,CAACX,OAAV,CAAkByB,OAAlB,CAA0BC,EAAE,IAAE;AAC1B,YAAGf,SAAS,CAACX,OAAV,CAAkB2B,OAAlB,CAA0BD,EAA1B,MAAgCA,EAAnC,EAAsC;AAClCf,UAAAA,SAAS,CAACX,OAAV,CAAkBwB,OAAlB,CAA0B;AAACI,YAAAA,EAAE,EAAClB,MAAM,CAACkB,EAAX;AAAef,YAAAA,IAAI,EAACH,MAAM,CAACG,IAA3B;AAAgCQ,YAAAA,GAAG,EAACX,MAAM,CAACW,GAA3C;AAA+CC,YAAAA,KAAK,EAACZ,MAAM,CAACY,KAA5D;AAAkEC,YAAAA,IAAI,EAACb,MAAM,CAACa;AAA9E,WAA1B;AACH;AACJ,OAJD;AASJ,aAAOZ,SAAP;;AACC;AACI,aAAOF,KAAP;AAxCL;AA+CH,CArDD;;KAAMD,W;AAsDN,eAAeA,WAAf","sourcesContent":["import news from './../img/new.jpg';\r\n\r\nlet inishialSate={\r\n    allNews:[],\r\n    newNews:{},\r\n    newsChange:'',\r\n    newsChangeTitle:'',\r\n    filterNews:[],\r\n    newsfilter:'',\r\n    valueaAPI: false,\r\n    file:''\r\n}\r\n\r\nconst NewsReducer =(state=inishialSate,action)=>{\r\n    let stateCopy={\r\n        ...state,\r\n        allNews:[...state.allNews],\r\n        newNews:{...state.newNews},\r\n    }\r\n    switch(action.type){\r\n        case 'ADD-NEWS':\r\n\r\n        stateCopy.newNews={}\r\n        let date=new Date(),\r\n            year=date.getFullYear(),\r\n            moth=date.getMonth(),\r\n            data=date.getDate();\r\n\r\n        stateCopy.newNews.date=`${data} ${moth} ${year}`;\r\n        stateCopy.newNews.img=news;\r\n        stateCopy.newNews.title=stateCopy.newsChangeTitle;\r\n        stateCopy.newNews.text=stateCopy.newsChange;\r\n\r\n        stateCopy.allNews.unshift(stateCopy.newNews);\r\n        \r\n\r\n     return stateCopy\r\n     case 'CHANGE-TITLE-NEWS':\r\n        stateCopy.newsChangeTitle=action.title;\r\n     return stateCopy\r\n     case 'CHANGE-TEXT-NEWS':\r\n        stateCopy.newsChange=action.text;\r\n     return stateCopy;\r\n     case 'CHANGE-FILE':\r\n        stateCopy.file=action.file;\r\n     return stateCopy\r\n     case \"ALL-NEWS-DB\":\r\n        stateCopy.valueaAPI=true;\r\n        stateCopy.allNews.forEach(el=>{\r\n            if(stateCopy.allNews.indexOf(el)!==el){\r\n                stateCopy.allNews.unshift({id:action.id, date:action.date,img:action.img,title:action.title,text:action.text});\r\n            }\r\n        })\r\n            \r\n        \r\n         \r\n         \r\n    return stateCopy;\r\n     default:\r\n         return state\r\n       \r\n        \r\n    }\r\n\r\n\r\n\r\n}\r\nexport default NewsReducer;"]},"metadata":{},"sourceType":"module"}