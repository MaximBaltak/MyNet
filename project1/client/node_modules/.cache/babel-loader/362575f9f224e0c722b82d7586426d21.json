{"ast":null,"code":"import ava from './../img/ava.jpg';\nlet inishialSate = {\n  massage: [{\n    id: 1,\n    ava: ava,\n    name: 'Никита',\n    massage: ['Как у тебя дела?']\n  }, {\n    id: 2,\n    ava: ava,\n    name: 'Саша',\n    massage: ['Как у тебя дела?']\n  }, {\n    id: 3,\n    ava: ava,\n    name: 'Александр',\n    massage: ['Как у тебя дела?']\n  }, {\n    id: 4,\n    ava: ava,\n    name: 'Алексей',\n    massage: ['Как у тебя дела?']\n  }, {\n    id: 5,\n    ava: ava,\n    name: 'Ксения',\n    massage: ['Как у тебя дела?']\n  }, {\n    id: 6,\n    ava: ava,\n    name: 'Димыч',\n    massage: [\"Шо за фигня\", \"Ты офигел\", \"Это мой проект, не знаю где ты его взял но это моё я тут бос, ясно!?\"]\n  }],\n  userMassage: [],\n  userMassageChange: ''\n};\n\nconst massagesReducer = (state = inishialSate, action) => {\n  let stateCopy = { ...state\n  };\n\n  switch (action.type) {\n    case 'NEW-USER-MASSAGE':\n      stateCopy.userMassage = [...state.userMassage];\n      stateCopy.userMassage.push(state.userMassageChange);\n      stateCopy.userMassageChange = '';\n      return stateCopy;\n\n    case 'NEW-USER-MASSAGE-CHANGE':\n      stateCopy.newPost = action.newText;\n      stateCopy.userMassageChange = action.text;\n      return stateCopy;\n\n    default:\n      return state;\n  }\n};\n\nexport default massagesReducer;","map":{"version":3,"sources":["D:/react-project/project1/client/src/redux/MassagesReducer.js"],"names":["ava","inishialSate","massage","id","name","userMassage","userMassageChange","massagesReducer","state","action","stateCopy","type","push","newPost","newText","text"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,kBAAhB;AACA,IAAIC,YAAY,GAAE;AAEdC,EAAAA,OAAO,EAAE,CACL;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASH,IAAAA,GAAG,EAAEA,GAAd;AAAmBI,IAAAA,IAAI,EAAE,QAAzB;AAAmCF,IAAAA,OAAO,EAAC,CAAE,kBAAF;AAA3C,GADK,EAEL;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASH,IAAAA,GAAG,EAAEA,GAAd;AAAmBI,IAAAA,IAAI,EAAE,MAAzB;AAAiCF,IAAAA,OAAO,EAAE,CAAE,kBAAF;AAA1C,GAFK,EAGL;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASH,IAAAA,GAAG,EAAEA,GAAd;AAAmBI,IAAAA,IAAI,EAAE,WAAzB;AAAsCF,IAAAA,OAAO,EAAE,CAAE,kBAAF;AAA/C,GAHK,EAIL;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASH,IAAAA,GAAG,EAAEA,GAAd;AAAmBI,IAAAA,IAAI,EAAE,SAAzB;AAAoCF,IAAAA,OAAO,EAAE,CAAE,kBAAF;AAA7C,GAJK,EAKL;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASH,IAAAA,GAAG,EAAEA,GAAd;AAAmBI,IAAAA,IAAI,EAAE,QAAzB;AAAmCF,IAAAA,OAAO,EAAE,CAAE,kBAAF;AAA5C,GALK,EAML;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASH,IAAAA,GAAG,EAAEA,GAAd;AAAmBI,IAAAA,IAAI,EAAE,OAAzB;AAAkCF,IAAAA,OAAO,EAAE,CAAE,aAAF,EAAiB,WAAjB,EAA8B,sEAA9B;AAA3C,GANK,CAFK;AAUdG,EAAAA,WAAW,EAAC,EAVE;AAWdC,EAAAA,iBAAiB,EAAE;AAXL,CAAlB;;AAcA,MAAMC,eAAe,GAAC,CAACC,KAAK,GAACP,YAAP,EAAoBQ,MAApB,KAA6B;AAC/C,MAAIC,SAAS,GAAC,EAAC,GAAGF;AAAJ,GAAd;;AAEA,UAAOC,MAAM,CAACE,IAAd;AAEI,SAAK,kBAAL;AACID,MAAAA,SAAS,CAACL,WAAV,GAAsB,CAAC,GAAGG,KAAK,CAACH,WAAV,CAAtB;AACAK,MAAAA,SAAS,CAACL,WAAV,CAAsBO,IAAtB,CAA2BJ,KAAK,CAACF,iBAAjC;AACAI,MAAAA,SAAS,CAACJ,iBAAV,GAA4B,EAA5B;AACJ,aAAOI,SAAP;;AAEA,SAAK,yBAAL;AACAA,MAAAA,SAAS,CAACG,OAAV,GAAkBJ,MAAM,CAACK,OAAzB;AACAJ,MAAAA,SAAS,CAACJ,iBAAV,GAA4BG,MAAM,CAACM,IAAnC;AACA,aAAOL,SAAP;;AAEA;AACA,aAAOF,KAAP;AAdJ;AAiBH,CApBD;;AAqBA,eAAeD,eAAf","sourcesContent":["import ava from './../img/ava.jpg';\r\nlet inishialSate= {\r\n    \r\n    massage: [\r\n        { id: 1, ava: ava, name: 'Никита', massage:[ 'Как у тебя дела?',]},\r\n        { id: 2, ava: ava, name: 'Саша', massage: [ 'Как у тебя дела?',]},\r\n        { id: 3, ava: ava, name: 'Александр', massage: [ 'Как у тебя дела?',]},\r\n        { id: 4, ava: ava, name: 'Алексей', massage: [ 'Как у тебя дела?',]},\r\n        { id: 5, ava: ava, name: 'Ксения', massage: [ 'Как у тебя дела?',]},\r\n        { id: 6, ava: ava, name: 'Димыч', massage: [ \"Шо за фигня\", \"Ты офигел\", \"Это мой проект, не знаю где ты его взял но это моё я тут бос, ясно!?\" ]},\r\n      ],\r\n    userMassage:[],\r\n    userMassageChange: '',\r\n}\r\n\r\nconst massagesReducer=(state=inishialSate,action)=>{\r\n    let stateCopy={...state}\r\n\r\n    switch(action.type){\r\n        \r\n        case 'NEW-USER-MASSAGE':\r\n            stateCopy.userMassage=[...state.userMassage]\r\n            stateCopy.userMassage.push(state.userMassageChange)\r\n            stateCopy.userMassageChange='';\r\n        return stateCopy;\r\n        \r\n        case 'NEW-USER-MASSAGE-CHANGE':\r\n        stateCopy.newPost=action.newText; \r\n        stateCopy.userMassageChange=action.text    \r\n        return stateCopy;\r\n        \r\n        default: \r\n        return state;\r\n    }\r\n\r\n}\r\nexport default massagesReducer\r\n"]},"metadata":{},"sourceType":"module"}